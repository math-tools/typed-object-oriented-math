this::
	date = 2024-07-14


abrev::
	amocfg = ?/grammar/:this.name:

    content = :this.name:


=========
Les \vars
=========

Pour \thisproj, une \var est un \obj associé à un type via le mot-clé ''var'' comme dans l'exemple suivant où deux méthodes sont possibles
((
	Noter l'usage possible de commentaires à la sauce \code_c.
)).

amo::
	/* ------------------------------ *
	 * -- MES VARIABLES NATURELLES -- *
	 * ------------------------------ */

	// Syntaxe 1 naturelle (sans mauvais jeu de mots)
	var m in \N

	// Syntaxe 2 via le typage (à utiliser en coulisse)
	var k : Nat


Nous avons ici deux syntaxes.

	1) La plus classique du point de \amo est ''var k : Nat'' où le type utilisé est celui d'un entier naturel.
	La syntaxe est de la forme ''var nom_var : UnType''.

	1) La plus "naturelle" pour un scientifique est ''var m in \N''. Ceci est possible car \amo propose ''\N'' comme instance de ''NatSet'' le type ce qui peut être un \ens "naturel".
	La syntaxe est de la forme ''var nom_var in UnEns'', et non ''var nom_var in UnType''.


Les sections suivantes vous donnent tous les types "simples" fournis clé en main par \thisproj, ainsi que les instances créées par défaut
((
	La lecture de ce qui ne suit ne devrait pas éveiller en vous un iota de poésie... L'utile ne rejoindra pas l'agréable.
)).


// -- TYPES - AUTO - START -- //
// -- TYPES - AUTO - END -- //
