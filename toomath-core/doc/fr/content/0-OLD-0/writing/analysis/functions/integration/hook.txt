thisFile::
	gene::
		date = 28-04-2011

	mathDef::
	    F(x)


=====================
L'opérateur "crochet"
=====================

Lors du calcul d'intégrales, il est souvent utile d'avoir à taper `int(x^2 | x = 1...3) = hook(x**3/3 | x = 1...3)` où `hook(F(x) | x = a...b) := F(b) - F(a)`. C'est la fonction pybaMath::''hook'' ((Attention ! En anglais, "crochet" au sens mathématique se dit "bracket", alors que "hook" désigne le crochet du fameux capitaine.)) qui permet cela : les deux formules précédentes s'obtiennent en tapant pybaMath::''int(x^2 | x = 1...3) = hook(x**3/3 | x = 1...3)'' et pybaMath:''hook(F(x) | x = a...b) := F(b) - F(a)''.


Nous pouvons aussi ***obtenir deux autres \mefs à moindre frais*** grâce à deux jeux de casse très facile à utiliser.

    1) Si vous souhaitez faire apparaître la variable `x` comme dans `Hook(F(x) | x = a...b)`, il suffira d'utiliser pybaMath::''Hook(F(x) | x = a...b)'' où pybaMath::''Hook'' possède jute une majuscule au début.

    1) Au lieu de taper pybaMath:''F(b) - F(a)'', on pourra utiliser pybaMath:''HOOK(F(x) | x = a...b)'' avec pybaMath::''HOOK'' tout en majuscules. Ceci permet de rédiger rapidement à l'aide de copier-coller, et c'est aussi très utile dans le cas d'une fonction `F(x)` longue à taper comme dans pybaMath:''HOOK(cos(21*x + 5)sin(7*x) | x = 2/7...9/4)'' qui donnera sans effort `HOOK(cos(21*x + 5)sin(7*x) | x = 2/7...4/8)`. On prendra garde à ce que \pyba fait ici une substitution basique sans calcul. Cette \mef est à but pédagogique comme le montre les fractions non simplifiées dans l'exemple précédent.
