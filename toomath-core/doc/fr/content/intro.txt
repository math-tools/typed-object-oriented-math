this::
	date = 2024-07-29


======================
Écrire pour définir...
======================

\thisproj tente de proposer un \syst simple de \def d'\objs \maths, via le jeu des caractères \ascii, de telle façon qu'une analyse sémantique avancée soit possible, l'objectif est d'aider à la conception d'\applis comme les suivantes.

	1) \Mef d'\objs \maths de façon intuitive.

	1) Analyse et validation d'un contenu \math.

	1) Calculs symboliques ou non.

	1) \Demos semi-automatisées.


Pour ce faire, \thisproj utilise les ingrédients suivants.

	1) **Les \objs doivent être typés.**
	Par exemple, ''func f: \N -> \Q'' définit une fonction `f` de l'\ens \std des naturels dans celui des rationnels.

	1) ***Les \objs sont enrichis de propriétés.**
	Par exemple, on peut indiquer que ''f: \N -> \Q'' s'annule sur `\P` l'\ens \std des \nbres premiers via ''forall x in \P , f x = 0''
	((
		L'emploi d'une notation fonctionnelle à la \lisp, \haskell ou \coq rend de grands services lors de la déclaration de \props.
	)).

	1) Les \defs proposées doivent être informatiquement calculables en fournissant le moins possible d'\infos.


Concrètement, il faudra donc commencer par définir les \objs \maths avant de pouvoir les utiliser dans différents \ctxts : simples \mefs, calculs, tracés, \demos semi-automatisées... Le champ des possibles devient grand.


note::
	\thisproj propose en fait une sorte de mini-langage facile à prendre en main, les \defs se faisant majoritairement de façon constructive.
