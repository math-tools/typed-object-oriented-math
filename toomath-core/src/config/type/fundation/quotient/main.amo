/***
================
Generic quotient
================

The ''QuotientSetOf'' type is a parametric one defining a versatile
quotient "QType'' type from the type \arg ''PreQT'', and the \struct
of the quotient type is specified by the \arg type "QFtype''
(all \args must be "transtypable" into "Set'').

For example, let's suppose that we want to construct ''Z'' via the
classical quotient \struct on ''N * N''. This construction could start
using ''QuotientSetOf (NatSet * NatSet | IntSet)'' and then specifying
the \ope regarding the ''cano_surj'' and ''repr'' functions.
This strategy is used to define quotient fields of integral domains.


ref::
    title   = Pragmatic Quotient Types in Coq
    version = Pre-publication
    author  = Cyril, Cohen
    url     = https://perso.crans.org/cohen/papers/quotients.pdf
              [2024-07-15]
***/

type QuotientSetOf (PreQT : Set) as Qof {
  type Qof : Set

  var cano_surj : PreQT.InSet -> Qof.InSet   ,
      repr      : Qof.InSet   -> PreQT.InSet

  fix func in (elt : Unspec) -> \B {
    return (
      exist pre_elt in PreQT ,
      elt = (cano_surj pre_elt)
    )
  }

  axiom {
    universal_diagram :=
      forall x in Qof ,
      cano_surj (repr x) = x
  }
}
