/***
======
Monoid
======

-------------
\Gene \struct
-------------

A monoid ''M'' is a magma with two additional axioms.

    1) The binary operator ''M.op'' is associative :
    ''M.op x (M.op y z) = M.op (M.op x y) z''.

    2) There is a special neutral element ''M.id'' with no effect on
    the operator ''M.op''.
***/

type Monoid : Magma as M {
  var id : M.InSet

  func op_ntimes : M.InSet -> Nat -> M.InSet

  axiom {
    associativity :=
      forall x y z in M ,
      op x (op y z) = op (op x y) z

    left_neutral :=
      forall x in M ,
      op id x = x

    right_neutral :=
      forall x in M ,
      op x id = x
  }
}


type OrderedMonoid      : Monoid + OrderedMagma
type TotalOrderedMonoid : Monoid + TotalOrderedMagma
