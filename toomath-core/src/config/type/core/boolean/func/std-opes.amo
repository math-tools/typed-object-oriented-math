/***
=============
Boolean \opes
=============

-----------
Basic \opes
-----------
***/

with (bool bool_1 bool2 : \B) in
parse "not {bool}"            as (not bool)          ,
      "{bool_1} or {bool_2}"  as (or bool_1 bool_2)  ,
      "{bool_1} and {bool_2}" as (and bool_1 bool_2)


fix func not (elt : \B) -> \B {
  return (
    match elt with
      | true  -> false
      | false -> true
  )
}


fix func or (elt_1 : \B)
         -> (elt_2 : \B)
         -> \B
{
  return (
    match (elt_1 , elt_2) with
      | (true , _   ) -> true
      | (_    , true) -> true
      | _             -> false
  )
}


fix func and (elt_1 : \B)
          -> (elt_2 : \B)
          -> \B
{
  return (
    match (elt_1 , elt_2) with
      | (true , true) -> true
      | _             -> false
  )
}
