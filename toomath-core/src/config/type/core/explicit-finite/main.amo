/***
====================
Explicit finite sets
====================
***/

type ExplicitFiniteSet as EFS {
  axiom {
    legal_token_form := (
      match EFS with
        | {::}         -> True
        | {: _ :}      -> True
        | {: _ || _ :} -> True
        | _            -> False
    )
  }

  fix func in (elt : Unspec) -> \B {
    return (_in elt EFS)
  }

  fix func _in (elt : Unspec)
            -> (set : Set)
            -> \B
  {
    return (
      match set with
        | {: elt :}         -> True
        | {: elt || _ :}    -> True
        | {: _ || others :} -> _in elt {: others :}
        | _                 -> False
    )
  }

  type InSet as Elt {
    axiom {
      elt_of_set := Elt in EFS
    }
  }
}
